{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"ADD_TO_CART\":\n      //LOGIC TO ADD IN BASKET\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"EMPTY_BASKET\":\n      return { ...state,\n        basket: []\n      };\n\n    case \"REMOVE_FROM_CART\":\n      //LOGIC for removing from basket\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id); // we check if that item exits in the store\n\n      if (index >= 0) {\n        //item exits , remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Can't remove it\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/varunjeett/Desktop/EcommSite/ecommsite/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","newBasket","index","findIndex","basketItem","id","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAKF,SAAK,aAAL;AACE;AACA,aAAO,EACL,GAAGO,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELR,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAK,kBAAL;AACE;AACA,UAAIW,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACR,MAAV,CAAhB;AACA,YAAMY,KAAK,GAAGJ,KAAK,CAACR,MAAN,CAAaa,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD7B,CAAd,CAHF,CAOE;;AACA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACd;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACD,OAHD,MAGO;AACLK,QAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACD;;AAED,aAAO,EACL,GAAGV,KADE;AAELR,QAAAA,MAAM,EAAEW;AAFH,OAAP;;AAKF;AACE,aAAOH,KAAP;AAzCJ;AA2CD,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    case \"ADD_TO_CART\":\n      //LOGIC TO ADD IN BASKET\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n\n    case \"EMPTY_BASKET\":\n      return {\n        ...state,\n        basket: [],\n      };\n\n    case \"REMOVE_FROM_CART\":\n      //LOGIC for removing from basket\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n\n      // we check if that item exits in the store\n      if (index >= 0) {\n        //item exits , remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Can't remove it\");\n      }\n\n      return {\n        ...state,\n        basket: newBasket,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}